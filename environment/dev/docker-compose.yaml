version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    hostname: ${APP_HOST}
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: unless-stopped
    depends_on:
      - db
      - redis
    volumes:
      - ./web:/root/web
      - ./migrations:/root/migrations
      - ./configs:/root/configs
      - ./logs/app.log:/root/app.log

  db:
    image: postgres
    restart: always
    hostname: ${DB_HOST}
    container_name: ${DB_HOST}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    ports:
      - ${DB_PORT}:5432

  redis:
    restart: always
    image: redis:latest
    container_name: ${REDIS_HOST}
    hostname: ${REDIS_HOST}
    ports:
      - ${REDIS_PORT}:6379

  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080

  nginx:
    image: nginx:stable-alpine-perl
    env_file:
      - .env
    restart: unless-stopped
    container_name: nginx
    volumes:
      - ./web/assets:/var/www/virtual/htdocs/app/assets
      - ./web/uploads:/var/www/virtual/htdocs/app/uploads
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
      - ./nginx/error.log:/etc/nginx/error.log
      - ./nginx/access.log:/etc/nginx/access.log
    ports:
      - 80:80
    depends_on:
      - app